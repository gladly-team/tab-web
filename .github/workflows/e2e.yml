# This is a basic workflow to help you get started with Actions

name: E2E tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# https://docs.github.com/en/code-security/dependabot/working-with-dependabot/automating-dependabot-with-github-actions#changing-github_token-permissions
permissions: write-all

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BROWSERSTACK_USER: kevinjennison1
      BROWSERSTACK_KEY: ${{secrets.BROWSERSTACK_KEY}}
      INTEGRATION_TEST_USER_EMAIL: ${{secrets.INTEGRATION_TEST_USER_EMAIL}}
      INTEGRATION_TEST_USER_PASSWORD: ${{secrets.INTEGRATION_TEST_USER_PASSWORD}}
      MAILOSAUR_SERVER_ID: ${{secrets.MAILOSAUR_SERVER_ID}}
      MAILOSAUR_API_KEY: ${{secrets.MAILOSAUR_API_KEY}}
      SELENIUM_DRIVER_TYPE: remote
      SELENIUM_HOST: https://test-tab2017.gladly.io
      # A unique build identifier passed to tab-e2e.
      TRAVIS_BUILD_NUMBER: tab-web-${{ github.run_number }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: merge master to qa
        uses: repo-sync/github-sync@v2
        with:
          source_repo: "gladly-team/tab-web"
          source_branch: "master"
          destination_branch: "qa"
          github_token: ${{ github.token }}
      - name: Merge feature branch -> qa
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          from_branch: ${{ github.head_ref }}
          target_branch: qa
          github_token: ${{ github.token }}
      # Vercel deploys the pr branch first, we can't poll for the QA deploy until that build 
      # has started so we sleeep 150 seconds.  The trade off is that if two people merge to 
      # master in the span of a few minutes, we'll only e2e test the most recent commit.
      - name: Sleep for 150 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '150s'
      - name: waiting for vercel to finish building
        uses: UnlyEd/github-action-await-vercel@v1.1.0
        id: await-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: tab-web-qa-gladly-team.vercel.app # TODO Replace by the domain you want to test
          timeout: 100 # Wait for 100 seconds before failing
      - name: Display deployment status
        run: "echo The deployment at ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).url }} is ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).readyState }}"
      - name: Install dependencies
        run: yarn install
      - name: Run e2e tests
        run: yarn test:e2e

